<div id="<%= dom_id(comment) %>" class="flex items-center w-96 py-3">
  <div>
    <%= image_tag 'defaultUser.jpg', class: "border border-black/80 rounded-full cursor-pointer", width: 40, height: 40 %>
  </div>
  <div class="text-sm font-semibold w-9/12 ml-2">
    <%= comment.user.name %>
    <span class="font-normal ml-2"><%= time_ago_in_words(@post.created_at) %>前</span>
    <div class="font-normal break-words w-80"><%= comment.body %></div>
  </div>
  <% if current_user.own?(comment) %>
    <button id="commentDropdownButton" class=" pr-1">
      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
        <path stroke-linecap="round" stroke-linejoin="round" d="M12 6.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 12.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5ZM12 18.75a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5Z" />
      </svg>
    </button>
    <div id="commentDropdownMenu" class=" bg-[#353539] w-28 rounded-lg">
      <ul class="text-white text-center w-28">
        <li>
          <%= link_to '削除', comment_path(comment), data: { turbo_method: 'delete', turbo_confirm: '投稿を削除しますか' }, class: 'delete-comment-link block px-4 py-2 hover:bg-gray-600 rounded-lg' %>
        </li>
      </ul>
    </div>
  <% end %>
</div>

<%# <script>
 document.addEventListener('DOMContentLoaded', () => {
    const renderComponentComment = () => {
      const commentDropdownButton = document.getElementById('commentDropdownButton');
      const commentDropdownMenu = document.getElementById('commentDropdownMenu');

      if (commentDropdownButton) {
        commentDropdownButton.addEventListener('click', (e) => {
          e.stopPropagation();
          commentDropdownMenu.classList.toggle('hidden');
        });

        document.addEventListener('click', (e) => {
          if (!commentDropdownButton.contains(e.target) && !commentDropdownMenu.contains(e.target)) {
            commentDropdownMenu.classList.add('hidden');
          }
        });
      }
    };
    document.addEventListener('turbo:load', renderComponentComment);
  });
</script> %>