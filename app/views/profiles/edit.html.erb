<div class="bg-blue-500/30 flex justify-center mx-auto animate-fadeIn">
  <div class="absolute top-20 left-1/2 transform -translate-x-1/2 min-w-[330px] max-w-[330px] md:min-w-[550px] md:max-w-[550px] pb-36">
    <div class="bg-gray-100 h-[730px] rounded-xl cursor-pointer overflow-hidden">
      <div class="w-full mx-auto px-4">
        <%= form_with(model: @profile, url: user_profile_path(@user), method: :patch) do |f| %>
          <div class="border-b border-gray-700/20 grid grid-cols-3 font-medium">
            <%= link_to 'キャンセル', user_profile_path, class: 'py-2 mt-1 text-left text-xs md:text-base rounded-lg text-gray-700' %>
            <div class="flex items-center font-semibold"> プロフィール編集</div>
            <div class="text-right">
              <%= f.submit "編集する", class: "text-blue-500 hover:text-blue-700 font-medium text-xs md:text-base py-2 mt-1" %>
            </div>
          </div>

          <div class="mt-10 ml-4">
            <!--アイコン画像-->
            <%= f.file_field :images, id: 'profile-file-input', accept: 'image/png, image/jpeg', class:"hidden text-sm mr-2" %>
            <label for="profile-file-input" class="relative bg-gray-500 h-40 w-[160px] mr-4 flex flex-col items-center justify-center rounded-full cursor-pointer overflow-hidden">
              <svg id="profile-file-Svg" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="absolute z-50 mb-2 size-14 text-gray-600/50">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6.827 6.175A2.31 2.31 0 0 1 5.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 0 0-1.134-.175 2.31 2.31 0 0 1-1.64-1.055l-.822-1.316a2.192 2.192 0 0 0-1.736-1.039 48.774 48.774 0 0 0-5.232 0 2.192 2.192 0 0 0-1.736 1.039l-.821 1.316Z" />
                <path stroke-linecap="round" stroke-linejoin="round" d="M16.5 12.75a4.5 4.5 0 1 1-9 0 4.5 4.5 0 0 1 9 0ZM18.75 10.5h.008v.008h-.008V10.5Z" />
              </svg>
              <img id="profile-image-preview" class="h-full w-full object-cover" src="<%= @user.images.present? ? @user.images : asset_path('defaultUser.jpg') %>" alt="選択された画像"/>
            </label>
          </div>

          <div class="grid md:grid-cols-2 mt-10">
            <div class="relative z-0 w-full mb-3 md:mb-5 group">
              <%= f.text_field :instrument, class: "block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-500/70 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer", placeholder: " " %>
              <label for="brand-list" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
                楽器 :
              </label>
            </div>
            <div class="relative z-0 w-full mb-3 md:mb-5 group">
              <%= f.text_field :favorite_music, class: "block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-500/70 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer", placeholder: " " %>
              <label for="brand-list" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
                音楽ジャンル :
              </label>
            </div>
          </div>
          <div class="relative z-0 w-full mb-3 md:mb-5 group">
            <%= f.text_field :favorite_artist, class: "block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-500/70 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer", placeholder: " " %>
            <label for="instrument_model" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
              お気に入りアーティスト :
            </label>
          </div>
          <div class="relative z-0 w-full mb-3 md:mb-5 group">
            <%= f.text_area :introduction, rows: 14, class: "block px-0 w-full text-sm bg-transparent border-0 border-b-2 border-gray-500/70 appearance-none focus:outline-none focus:ring-0 focus:border-blue-600 peer resize-none", placeholder: " " %>
            <label for="body" class="peer-focus:font-medium absolute text-sm text-gray-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 rtl:peer-focus:translate-x-1/4 peer-focus:text-blue-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
              自己紹介 :
            </label>
          </div>         
        <% end %>
      </div>
    </div>
  </div>
</div>
<script>
document.addEventListener('DOMContentLoaded', () => {
  const renderComponents = () => {
	  const profileFileInput = document.getElementById('profile-file-input');
	  const profileImagePreview = document.getElementById('profile-image-preview');
    const profileFileSvg = document.getElementById('profile-file-Svg')

	  //imageアップロード
   profileFileInput.addEventListener('change', (e) => {
    const file = e.target.files[0];
    // ユーザーが選択したファイル（最初のファイル）を取得
    if (file) {
      const reader = new FileReader();
      //FileReaderオブジェクトはファイルの内容を非同期に読み取る
      reader.readAsDataURL(file);
      //fileオブジェクトを読込み、完了後 reader.onloadに定義した関数が実行される
      reader.onload = (e) => {
      //ファイルの読み込みが完了した時に実行される  
        profileImagePreview.src = e.target.result;
        //id="image-preview"で関連つけた<img>要素のsrcへ読み込んだ画像ファイルを格納
        profileImagePreview.classList.remove('hidden');
        profileFileSvg.classList.add('hidden')
        //classList.removeにより定義してあるclass: hiddenを削除する
      }
    } else {
      profileImagePreview.classList.add('hidden');
    }
  });
 }
 document.addEventListener('turbo:load', renderComponents);
});
</script>